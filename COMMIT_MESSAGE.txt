Release v0.5.0 - Streaming, Vector DB e Orchestration

Esta release adiciona tr√™s features principais ao Orquestra:

## 1. Streaming Responses ‚ú®
- Respostas em tempo real como ChatGPT
- M√©todos stream() e astream() em todos os agentes
- Implementado para OpenAI e Anthropic
- Suporte completo a tool calling durante streaming
- Exemplo: examples/streaming_example.py

## 2. Vector Database Integration üîç
- Novo m√≥dulo de embeddings (OpenAI text-embedding-3)
- Vector stores: ChromaDB integration completa
- RAG (Retrieval-Augmented Generation) pronto para produ√ß√£o
- KnowledgeMemory com busca sem√¢ntica opcional
- Exemplo: examples/vector_rag_example.py

## 3. Agent Orchestration ü§ù
- Sistema de workflows para encadear agentes
- SequentialWorkflow implementado
- API fluente para composi√ß√£o de agentes
- Base para workflows paralelos e condicionais

## Arquivos Criados (11):
- src/orquestra/embeddings/ (3 arquivos)
- src/orquestra/vectorstores/ (3 arquivos)
- src/orquestra/orchestration/ (2 arquivos)
- examples/ (2 novos exemplos)
- IMPLEMENTACAO_v0.5.0.md

## Arquivos Modificados (9):
- Providers: OpenAI e Anthropic com streaming
- Core: Agent e Provider com m√©todos de streaming
- Memory: KnowledgeMemory com vector store
- Docs: README e CHANGELOG atualizados
- Version: 0.4.0 ‚Üí 0.5.0

## Depend√™ncias Opcionais:
- vectordb: chromadb>=0.4.0
- qdrant: qdrant-client>=1.7.0

## Backward Compatibility:
‚úÖ 100% compat√≠vel com c√≥digo existente
‚úÖ Todas as features s√£o opcionais
‚úÖ Fallbacks autom√°ticos

## Roadmap:
- [x] Streaming responses
- [x] Vector database integration
- [x] Agent orchestration and chaining

## Pr√≥ximos passos:
- [ ] Parallel agent execution
- [ ] More vector databases (Pinecone, Weaviate)
- [ ] Streaming for all providers
